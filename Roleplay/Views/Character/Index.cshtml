@model Roleplay.ViewModels.ListCharacterViewModel

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1 class="text-center">Characters</h1>
<p></p>
@if (User.Identity.IsAuthenticated)
{
    <a asp-action="Create">Create a new character</a>
}
<p></p>

<form asp-controller="Character" asp-action="Search" method="get">
    <div class="form-group">
        <p>
            <input asp-for="CharacterSearch" />
            <input type="submit" value="Search by name" class="btn btn-primary" />
        </p>
        <a asp-controller="Character" asp-action="Index">Show all characters</a>
    </div>
</form>

<div class="row">
    @foreach (var item in Model.Characters)
    {
        <div class="col-sm-6 d-flex align-items-stretch">

            <div class="card w-100 mb-5">
                <div class="card-header text-center text-light">
                    @Html.DisplayFor(modelItem => item.CharacterName)
                </div>
                <div class="card-body text-center">
                    <i class="@Html.DisplayFor(modelItem=>item.CharacterClass.CharacterClassIcon) fa-5x"></i>
                    <p></p>
                    <h6 class="card-title">@Html.DisplayFor(modelItem => item.CharacterGender)</h6>
                    <h5 class="card-title">@Html.DisplayFor(modelItem => item.CharacterClass.CharacterClassName)</h5>
                    <p class="card-text">@Html.DisplayFor(modelItem => item.CharacterDescription)</p>
                </div>
                <ul class="list-group list-group-flush">
                    <li class="list-group-item">Age: @Html.DisplayFor(modelItem => item.CharacterAge)</li>
                    <li class="list-group-item">Favourite weapon: @Html.DisplayFor(modelItem => item.FavouriteWeapon)</li>
                    <li class="list-group-item">Hometown: @Html.DisplayFor(modelItem => item.HomeTown)</li>
                    <li class="list-group-item">Created by @Html.DisplayFor(modelItem => item.Player.Name) </li>
                </ul>
                <div class="card-footer">
                    @if (User.Identity.IsAuthenticated && item.UserName == this.User.Identity.Name)
                    {
                        <a asp-action="Edit" asp-route-id="@item.CharacterID">Edit |</a>
                    }
                    
                    @if (User.Identity.IsAuthenticated && item.UserName == this.User.Identity.Name)
                    {
                        <a asp-action="Delete" asp-route-id="@item.CharacterID">Delete</a>
                    }
                     
                    
                </div>
            </div>
        </div>

    }
</div>






